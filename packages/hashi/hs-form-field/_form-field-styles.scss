//
//  Copyright (c) 2023 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../hs-core';
@use 'sass:map';
@use 'form-field-base';

$fill: 'surface-200' !default;
$fill-disabled: 'disabled' !default;
$ink: 'surface-ink' !default;
$ink-disabled: 'disabled-ink' !default;
$border: $fill !default;
$border-focus: 'accent-400' !default;
$border-disabled: 'disabled' !default;

$radius: 'small' !default;
$padding: ('md' 'lg') !default;
$border-width: 1px !default;
$border-style: solid !default;

$family: 'body' !default;
$size: 'body' !default;
$weight: 'normal' !default;
$line-height: 'normal' !default;

$label-ink: 'surface-ink' !default;
$helper-ink: 'surface-ink' !default;

$theme: () !default;

$_fill: hs-core.prioritize(map.get($theme, 'fill'), $fill);
$_fill-disabled: hs-core.prioritize(map.get($theme, 'fill-disabled'), $fill-disabled);
$_ink: hs-core.prioritize(map.get($theme, 'ink'), $ink);
$_ink-disabled: hs-core.prioritize(map.get($theme, 'ink-disabled'), $ink-disabled);
$_border: hs-core.prioritize(map.get($theme, 'border'), $border);
$_border-focus: hs-core.prioritize(map.get($theme, 'border-focus'), $border-focus);
$_border-disabled: hs-core.prioritize(map.get($theme, 'border-disabled'), $border-disabled);

$_radius: hs-core.prioritize(map.get($theme, 'radius'), $radius);
$_padding: hs-core.prioritize(map.get($theme, 'padding'), $padding);
$_border-width: hs-core.prioritize(map.get($theme, 'border-width'), $border-width);
$_border-style: hs-core.prioritize(map.get($theme, 'border-style'), $border-style);

$_family: hs-core.prioritize(map.get($theme, 'family'), $family);
$_size: hs-core.prioritize(map.get($theme, 'size'), $size);
$_weight: hs-core.prioritize(map.get($theme, 'weight'), $weight);
$_line-height: hs-core.prioritize(map.get($theme, 'line-height'), $line-height);

$_label-ink: hs-core.prioritize(map.get($theme, 'label-ink'), $label-ink);
$_helper-ink: hs-core.prioritize(map.get($theme, 'helper-ink'), $helper-ink);

@mixin render() {
  @include form-field-base.init($_label-ink, $_helper-ink) {
    .hs-form-field__input {
      @include hs-core.shape-apply('form-field', (
        radius: $_radius,
        padding: $_padding,
        border-width: $_border-width,
        border-style: $_border-style
      ));
      @include hs-core.typography-apply('form-field', (
        family: $_family,
        size: $_size,
        weight: $_weight,
        line-height: $_line-height
      ));
      & {
        outline: none;
      }
      @include hs-core.prefix(appearance, none, ('moz', 'webkit'));
      @include hs-core.prefix(transition, all var(--hs-transition-time) ease);

      &:not(:read-only) {
        @include hs-core.color-apply('form-field', (
          fill: $_fill,
          ink: $_ink,
          border: $_border
        ));

        &:focus {
          @include hs-core.color-bind('form-field', (
            border: $_border-focus
          ));
        }
      }

      &:read-only {
        @include hs-core.color-apply('form-field', (
          fill: $_fill-disabled,
          ink: $_ink-disabled,
          border: $_border-disabled
        ));
      }
    }

    &:where(.is-required) {
      .hs-form-field__label::after {
        content: '*';
        color: hs-core.token-get('error-400');
        margin-left: hs-core.primitive-token-get('margin.xs');
      }
    }

    &:where(.is-raised) {
      .hs-form-field__input:not(:read-only) {
        @include hs-core.shape-apply('form-field', (
          shadow: 'low'
        ));
      }
    }

    &:where(.is-error) {
      @include hs-core.color-bind('form-field-label', (
        ink: 'error-400',
      ));
      @include hs-core.color-bind('form-field-helper', (
        ink: 'error-400',
      ));

      .hs-form-field__input:not(:read-only) {
        &:focus {
          @include hs-core.color-bind('form-field', (
            border: 'error-400'
          ));
        }
      }

      svg {
        color: hs-core.token-get('error-400');
      }
    }
  }
}