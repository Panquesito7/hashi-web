///
//  Copyright (c) 2022 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use 'node_modules/@matteusan/sentro';
@use 'sass:map';
@use 'sass:string';
@use 'sass:meta';
@use '../tools';

$_hs-extended-tokens: ();

@function check($query) {
  @return sentro.token-check($query);
}

@function get($query) {
  @return sentro.token-get($query);
}

@function get-raw($query) {
  @if check($query)
      and meta.type-of(sentro.token-get-raw($query)) == string
      and meta.type-of(sentro.token-get-raw($query)) != color {
    $_token: sentro.token-get-raw($query);
    @if string.index($_token, 'var(--hs-theme-') == 1 {
      $_extracted: string.slice($_token, 16, (string.length($_token) - 1));
      @return get-raw($_extracted);
    }
  }
  @return sentro.token-get-raw($query);
}

@function switch($query, $fallback: ()) {
  @if tools.is-empty($fallback) {
    @return sentro.token-switch($query);
  }
  @if not check($query) and not tools.is-empty($fallback) {
    @return $fallback;
  }
  @if check($query) {
    @return get($query);
  }
  @return $query;
}

@function switch-raw($query, $fallback: ()) {
  @if tools.is-empty($fallback) {
    @return switch($query);
  }
  @if not check($query) and not tools.is-empty($fallback) {
    @return $fallback;
  }
  @if check($query) {
    @return get-raw($query);
  }
  @return $query;
}

@mixin config($map: (), $tokens...) {
  @include sentro.token-config($map: $map, $tokens...);
}