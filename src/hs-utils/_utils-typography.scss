//
//  Copyright (c) 2022 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../hs-core';
@use 'sass:map';

$type-presets: (
    'h1',
    'h2',
    'h3',
    'h4',
    'body',
    'icon',
    'action',
    'small'
);

$family-presets: (
    'global',
    'header',
    'body',
    'action',
    'code'
);

$type-states: (
    'hover',
    'focus',
    'active'
);

$type-alignments: (
    'left',
    'center',
    'right',
    'justify'
);

@mixin typography-utils() {
    @each $family-preset in $family-presets {
        .family-#{$family-preset} {
            font-family: hs-core.theme-token-get('family-#{$family-preset}');
        }
        
        @each $state in $type-states {
            .#{$state}\:family-#{$family-preset}:#{$state} {
                font-family: hs-core.theme-token-get('family-#{$family-preset}');
            }
        }
    }
    
    @each $type-preset in $type-presets {
        .size-#{$type-preset} {
            font-size: hs-core.theme-token-get('size-#{$type-preset}');
        }
        
        @each $state in $type-states {
            .#{$state}\:size-#{$type-preset}:#{$state} {
                font-size: hs-core.theme-token-get('size-#{$type-preset}');
            }
        }
    }
    
    @each $type-preset in $type-presets {
        .weight-#{$type-preset} {
            font-weight: hs-core.theme-token-get('weight-#{$type-preset}');
        }
    
        @each $state in $type-states {
            .#{$state}\:weight-#{$type-preset}:#{$state} {
                font-weight: hs-core.theme-token-get('weight-#{$type-preset}');
            }
        }
    }
    
    @each $type-preset in $type-presets {
        .line-height-#{$type-preset} {
            line-height: hs-core.theme-token-get('line-height-#{$type-preset}');
        }
    
        @each $state in $type-states {
            .#{$state}\:line-height-#{$type-preset}:#{$state} {
                line-height: hs-core.theme-token-get('line-height-#{$type-preset}');
            }
        }
    }
    
    @each $type-alignment in $type-alignments {
        .text-#{$type-alignment} {
            text-align: $type-alignment;
        }
    }
}