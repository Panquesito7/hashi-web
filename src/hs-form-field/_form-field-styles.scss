///
//  Copyright (c) 2022 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../hs-core';

@use 'form-field-base';

$fill: 'surface-200' !default;
$fill-disabled: 'disabled' !default;
$ink: 'surface-ink' !default;
$ink-disabled: 'disabled-ink' !default;
$border: 'primary-200' !default;
$border-focus: 'accent-400' !default;
$border-disabled: 'disabled' !default;

$radius: 'small' !default;
$padding: ('sm' 'md') !default;

$family: 'body' !default;
$size: 'body' !default;
$weight: 'normal' !default;
$line-height: 'normal' !default;

$label-ink: 'surface-ink' !default;
$helper-ink: 'surface-ink' !default;

@mixin render() {
  @include form-field-base.init($label-ink, $helper-ink) {
    .hs-form-field__input {
      @include hs-core.shape-apply('form-field', (
        radius: $radius,
        padding: $padding,
        border-width: 1px,
        border-style: solid
      ));
      @include hs-core.typography-apply('form-field', (
        family: $family,
        size: $size,
        weight: $weight,
        line-height: $line-height
      ));
      outline: none;
      @include hs-core.prefix(transition, all var(--hs-transition-time) ease);
      
      &:not(:read-only) {
        @include hs-core.color-apply('form-field', (
          fill: $fill,
          ink: $ink,
          border: $border
        ));
    
        &:focus {
          @include hs-core.color-bind('form-field', (
            border: $border-focus
          ));
        }
      }
  
      &:read-only {
        @include hs-core.color-apply('form-field', (
          fill: $fill-disabled,
          ink: $ink-disabled,
          border: $border-disabled
        ));
      }
    }
    
    &.is-required {
      .hs-form-field__label::after {
        content: '*';
        color: hs-core.token-get('danger-400');
        margin-left: hs-core.token-get('margin-xs');
      }
    }
    
    &.is-filled {
      .hs-form-field__input:not(:read-only) {
        @include hs-core.color-bind('form-field', (
          border: $fill
        ));
        @include hs-core.shape-apply('form-field', (
          shadow: 'low'
        ));
      }
    }
  
    &.is-danger {
      @include hs-core.color-bind('form-field-label', (
        ink: 'danger-400',
      ));
      @include hs-core.color-bind('form-field-helper', (
        ink: 'danger-400',
      ));
  
      .hs-form-field__input:not(:read-only) {
        &:focus {
          @include hs-core.color-bind('form-field', (
            border: 'danger-400'
          ));
        }
      }
  
      &:not(.is-filled) {
        .hs-form-field__input:not(:read-only) {
          @include hs-core.color-bind('form-field', (
            border: 'danger-400'
          ));
        }
      }
    
      svg {
        color: hs-core.token-get('danger-400');
      }
    }
  }
}