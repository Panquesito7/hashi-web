//
//  Copyright (c) 2021 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use 'card-base';
@use '../hs-core';

@use 'sass:map';

$_init-color: (
    preset: 'surface'
);

$_init-shape: (
    radius: 'sm',
    padding: 'xl'
);

$_init-type: (
    size: 'body',
    weight: 'body',
    line-height: 'body',
);

$_init-settings: (
    has-elevation: true
);

@mixin render(
    $color: (),
    $shape: (),
    $type: (),
    $settings: ()
) {
    $_merged-color: map.merge($_init-color, $color);
    $_merged-shape: map.merge($_init-shape, $shape);
    $_merged-type: map.merge($_init-type, $type);
    $_merged-settings: map.merge($_init-settings, $settings);
    
    $preset: map.get($_init-color, 'preset');
    $radius: map.get($_merged-shape, 'radius');
    $padding: map.get($_merged-shape, 'padding');
    $type-size: map.get($_merged-type, 'size');
    $type-weight: map.get($_merged-type, 'weight');
    $type-line-height: map.get($_merged-type, 'line-height');
    $has-elevation: map.get($_merged-settings, 'has-elevation');
    
    @include card-base.init() {
        @include hs-core.theme-key-bind('card-fill', hs-core.theme-token-get('#{$preset}-300'));
        @include hs-core.theme-key-bind('card-ink', hs-core.theme-token-get('#{$preset}-ink'));
        @include hs-core.theme-key-bind('card-border', hs-core.theme-token-get('#{$preset}-300'));
        
        @if $has-elevation {
            @include hs-core.tools-elevation(2);
        }
    
        border-radius: hs-core.theme-key-create('card-radius', hs-core.theme-token-get('radius-#{$radius}'));
        padding: hs-core.theme-key-create('card-padding', hs-core.theme-token-get('padding-#{$padding}'));
    
        font-size: hs-core.theme-key-create('card-size', hs-core.theme-token-get('size-#{$type-size}'));
        font-weight: hs-core.theme-key-create('card-weight', hs-core.theme-token-get('weight-#{$type-weight}'));
        line-height: hs-core.theme-key-create('card-line-height', hs-core.theme-token-get('line-height-#{$type-line-height}'));
    }
}
