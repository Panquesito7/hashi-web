//
//  Copyright (c) 2021 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../hs-core';
@use 'sass:map';
@use 'sass:list';

@use 'button-base';

$fill: 'scarlet' !default;
$ink: 'scarlet-ink' !default;
$border: $fill !default;
$tone: 400 !default;

$radius: 'radius-xs' !default;
$padding: (0.5rem 0.7rem) !default;

$family: 'family-action' !default;
$size: 'size-action' !default;
$weight: 'weight-action' !default;
$line-height: 'line-height-action' !default;

$variants: 'all' !default;

@mixin render() {
    
    $color-map: (
        fill: $fill,
        ink: $ink,
        border: $border
    );
    
    @include button-base.init() {
        @include hs-core.color-apply('button', $color-map, 'text', $stateful: true);
        @include hs-core.shape-apply('button', (
            radius: $radius,
            padding: $padding
        ));
        @include hs-core.typography-apply('button', (
            family: $family,
            size: $size,
            weight: $weight,
            line-height: $line-height
        ));
        outline: none;
    
        @if list.index($variants, 'outlined') or list.index($variants, 'all') {
            &.hs-button--outlined {
                @include hs-core.color-apply('button', $color-map, 'outlined', $stateful: true, $extend: true);
            }
        }
    
        @if list.index($variants, 'filled') or list.index($variants, 'all') {
            &.hs-button--filled {
                @include hs-core.color-apply('button', $color-map, 'filled', $stateful: true, $extend: true);
            }
        }
    }
}