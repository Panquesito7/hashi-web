///
//  Copyright (c) 2022 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../hs-core';
@use 'sass:map';

@use 'button-base';

$fill: 'accent' !default;
$ink: 'accent-ink' !default;
$border: $fill !default;
$tone: 400 !default;

$radius: 'xs' !default;
$padding: (0.4rem 0.6rem) !default;

$family: 'body' !default;
$size: 'body' !default;
$weight: 'bold' !default;
$line-height: 'normal' !default;

$gap: 0 !default;

$_states: (
  'success',
  'warning',
  'danger'
);

@mixin render() {
  @include button-base.init($gap) {
    @include hs-core.color-apply('button', (
      fill: $fill,
      ink: $ink,
      border: $border
    ), 'text', true, $tone);
    
    padding: hs-core.key-create('button-padding', hs-core.token-switch('padding-#{$padding}', $padding));
    border-radius: hs-core.key-create('button-radius', hs-core.token-switch('radius-#{$radius}', $radius));
    
    font-family: hs-core.key-create('button-family', hs-core.token-switch('family-#{$family}', $family));
    font-size: hs-core.key-create('button-size', hs-core.token-switch('size-#{$size}', $size));
    font-weight: hs-core.key-create('button-weight', hs-core.token-switch('weight-#{$weight}', $weight));
    line-height: hs-core.key-create('button-line-height', hs-core.token-switch('line-height-#{$line-height}', $line-height));
  
    @each $state in $_states {
      &.is-#{$state} {
        @include _state-generator($state, 'text');
      }
    }
    
    &.is-outlined {
      @include hs-core.color-bind('button', (
        fill: $fill,
        ink: $ink,
        border: $border
      ), 'outlined', true, $tone);
      
      @each $state in $_states {
        &.is-#{$state} {
          @include _state-generator($state, 'outlined');
        }
      }
    }
  
    &.is-filled {
      @include hs-core.color-bind('button', (
        fill: $fill,
        ink: $ink,
        border: $border
      ), 'filled', true, $tone);
  
      @each $state in $_states {
        &.is-#{$state} {
          @include _state-generator($state, 'filled');
        }
      }
    }
  }
}

@mixin _state-generator($state, $style) {
  @include hs-core.color-bind('button', (
    fill: $state,
    ink: '#{$state}-ink',
    border: $state
  ), $style, true, $tone);
}