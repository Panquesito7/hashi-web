///
//  Copyright (c) 2022 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
///

@use '../hs-core';
@use 'sass:map';

@use 'button-base';
@use 'button-shared' as shared;

$fill: 'accent-400' !default;
$fill-hover: 'accent-400' !default;
$fill-focus: 'accent-400' !default;
$fill-active: 'accent-200' !default;
$fill-disabled: 'disabled' !default;

$ink: 'accent-ink' !default;
$ink-disabled: 'disabled-ink' !default;

$border: $fill !default;
$border-hover: $fill-hover !default;
$border-focus: $fill-focus !default;
$border-active: $fill-active !default;
$border-disabled: $fill-disabled !default;

$radius: 'small' !default;
$padding: ('xs' 'md') !default;

$family: 'body' !default;
$size: 'body' !default;
$weight: 'bold' !default;
$line-height: 'normal' !default;

$_states: (
  'success',
  'warning',
  'danger'
);

$_fills: (
  'default': $fill,
  'hover': $fill-hover,
  'focus': $fill-focus,
  'active': $fill-active,
  'disabled': $fill-disabled
);

$_inks: (
  'default': $ink,
  'disabled': $ink-disabled
);

$_borders: (
  'default': $border,
  'hover': $border-hover,
  'focus': $border-focus,
  'active': $border-active,
  'disabled': $border-disabled
);

@mixin render() {
  @include button-base.init {
    @include hs-core.color-apply('button', (
      fill: 'dp-black-400',
      ink: 'dp-black-ink',
      border: 'dp-black-400'
    ));
    @include hs-core.shape-border-width('button', 1px);
    @include hs-core.shape-border-style('button', solid);
    @include hs-core.shape-apply('button', (
      radius: $radius,
      padding: $padding,
    ));
    @include hs-core.typography-apply('button', (
      family: $family,
      size: $size,
      weight: $weight,
      line-height: $line-height
    ));
    
    @include shared.text-style(
      $fills: $_fills,
      $inks: $_inks,
      $borders: $_borders
    );
  
    @each $state in $_states {
      &.is-#{$state} {
        @include shared.text-style(
          $fills: (
            'default': '#{$state}-400',
            'hover': '#{$state}-400',
            'focus': '#{$state}-400',
            'active': '#{$state}-200',
            'disabled': $fill-disabled,
          ),
          $inks: (
            'default': '#{$state}-ink',
            'disabled': $ink-disabled
          ),
          $borders: (
            'default': '#{$state}-400',
            'hover': '#{$state}-400',
            'focus': '#{$state}-400',
            'active': '#{$state}-200',
            'disabled': $border-disabled,
          )
        );
      }
    }
    
    &.is-outlined {
      @include shared.outlined-style(
        $fills: $_fills,
        $inks: $_inks,
        $borders: $_borders
      );
      
      @each $state in $_states {
        &.is-#{$state} {
          @include shared.outlined-style(
            $fills: (
              'default': '#{$state}-400',
              'hover': '#{$state}-400',
              'focus': '#{$state}-400',
              'active': '#{$state}-200',
              'disabled': $fill-disabled,
            ),
            $inks: (
              'default': '#{$state}-ink',
              'disabled': $ink-disabled
            ),
            $borders: (
              'default': '#{$state}-400',
              'hover': '#{$state}-400',
              'focus': '#{$state}-400',
              'active': '#{$state}-200',
              'disabled': $border-disabled,
            )
          );
        }
      }
    }
  
    &.is-filled {
      @include shared.filled-style(
        $fills: $_fills,
        $inks: $_inks,
        $borders: $_borders
      );
  
      @each $state in $_states {
        &.is-#{$state} {
          @include shared.filled-style(
            $fills: (
              'default': '#{$state}-400',
              'hover': '#{$state}-400',
              'focus': '#{$state}-400',
              'active': '#{$state}-200',
              'disabled': $fill-disabled,
            ),
            $inks: (
              'default': '#{$state}-ink',
              'disabled': $ink-disabled
            ),
            $borders: (
              'default': '#{$state}-400',
              'hover': '#{$state}-400',
              'focus': '#{$state}-400',
              'active': '#{$state}-200',
              'disabled': $border-disabled,
            )
          );
        }
      }
  
      &.is-raised {
        @include hs-core.shape-apply('button', (
          shadow: 'low'
        ));
    
        &:hover,
        &:focus {
          @include hs-core.shape-apply('button', (
            shadow: 'normal'
          ));
        }
    
        &:active {
          @include hs-core.shape-apply('button', (
            shadow: 'high'
          ));
        }
      }
    }
  }
}