//
//  Copyright (c) 2021 Dev Protocol
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//

@use '../theme';
@use 'sass:map';

@use 'font-pack';

@mixin apply($component-name, $type-preset, $extend: false) {
  $family: map.get($type-preset, 'family');
  $size: map.get($type-preset, 'size');
  $weight: map.get($type-preset, 'weight');
  $line-height: map.get($type-preset, 'line-height');

  @if $family {
    @if $extend {
      @include theme.key-bind('#{$component-name}-family', theme.token-get($family));
    } @else {
      font-family: theme.key-create('#{$component-name}-family', theme.token-get($family));
    }
  }

  @if $size {
    @if $extend {
      @include theme.key-bind('#{$component-name}-size', theme.token-switch($size));
    } @else {
      font-size: theme.key-create('#{$component-name}-size', theme.token-switch($size));
    }
  }

  @if $weight {
    @if $extend {
      @include theme.key-bind('#{$component-name}-weight', theme.token-get($weight));
    } @else {
      font-weight: theme.key-create('#{$component-name}-weight', theme.token-get($weight));
    }
  }

  @if $line-height {
    @if $extend {
      @include theme.key-bind('#{$component-name}-line-height', theme.token-switch($line-height));
    } @else {
      line-height: theme.key-create('#{$component-name}-line-height', theme.token-switch($line-height));
    }
  }
}

@mixin init() {

  @include font-pack.load();

  * {
    font-family: theme.token-get('family-global');
  }

  h1 {
    font-family: theme.token-get('family-header');
    font-size: theme.token-get('size-h1');
    font-weight: theme.token-get('weight-h1');
    line-height: theme.token-get('line-height-h1');
  }

  h2 {
    font-family: theme.token-get('family-header');
    font-size: theme.token-get('size-h2');
    font-weight: theme.token-get('weight-h2');
    line-height: theme.token-get('line-height-h2');
  }

  h3 {
    font-family: theme.token-get('family-header');
    font-size: theme.token-get('size-h3');
    font-weight: theme.token-get('weight-h3');
    line-height: theme.token-get('line-height-h3');
  }

  h4 {
    font-family: theme.token-get('family-header');
    font-size: theme.token-get('size-h4');
    font-weight: theme.token-get('weight-h4');
    line-height: theme.token-get('line-height-h4');
  }

  p,
  span,
  a {
    font-family: theme.token-get('family-global');
    font-size: theme.token-get('size-body');
    font-weight: theme.token-get('weight-body');
    line-height: theme.token-get('line-height-body');
    text-decoration: none;
  }

  small {
    font-family: theme.token-get('family-global');
    font-size: theme.token-get('size-small');
    font-weight: theme.token-get('weight-small');
    line-height: theme.token-get('line-height-small');
  }

  code,
  code * {
    font-family: theme.token-get('family-code');
    font-size: theme.token-get('size-body');
    font-weight: theme.token-get('weight-body');
    line-height: theme.token-get('line-height-body');
  }
}
